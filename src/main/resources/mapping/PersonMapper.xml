<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mexue.middle.school.mapper.PersonMapper" >
  <resultMap id="BaseResultMap" type="com.mexue.middle.school.entity.Person" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="age" property="age" jdbcType="SMALLINT" />
    <result column="political" property="political" jdbcType="VARCHAR" />
    <result column="origin" property="origin" jdbcType="VARCHAR" />
    <result column="professional" property="professional" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, name, sex, age, political, origin, professional, create_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mexue.middle.school.entity.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="query" resultMap="BaseResultMap" parameterType="com.mexue.middle.school.search.PersonSearch" >
    select
    <include refid="Base_Column_List" />
    from person
    <where>
      <if test="id != null" >
        id = #{id,jdbcType=BIGINT},
      </if>
      <!--<if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>-->
      <if test="name != null and name != ''">
        AND name LIKE CONCAT('%',#{name},'%')
      </if>
      <if test="code != null and code != ''">
        AND code LIKE CONCAT('%',#{code},'%')
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=SMALLINT},
      </if>
      <if test="political != null" >
        political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        professional = #{professional,jdbcType=VARCHAR},
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from person
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mexue.middle.school.entity.Person"  useGeneratedKeys="true" keyProperty="id">
    insert into person (id, code, name, 
      sex, age, political, 
      origin, professional)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{age,jdbcType=SMALLINT}, #{political,jdbcType=VARCHAR}, 
      #{origin,jdbcType=VARCHAR}, #{professional,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mexue.middle.school.entity.Person"  useGeneratedKeys="true" keyProperty="id">
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="political != null" >
        political,
      </if>
      <if test="origin != null" >
        origin,
      </if>
      <if test="professional != null" >
        professional,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null" >
        #{age,jdbcType=SMALLINT},
      </if>
      <if test="political != null" >
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        #{professional,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mexue.middle.school.entity.PersonExample" resultType="java.lang.Integer" >
    select count(*) from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.mexue.middle.school.entity.Person" >
    update person
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=SMALLINT},
      </if>
      <if test="political != null" >
        political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        professional = #{professional,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mexue.middle.school.entity.Person" >
    update person
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      age = #{age,jdbcType=SMALLINT},
      political = #{political,jdbcType=VARCHAR},
      origin = #{origin,jdbcType=VARCHAR},
      professional = #{professional,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>